# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2


references:

  container_python27: &container_python27
    docker:
      - image: circleci/python:2.7.13
    working_dir: ~/project

  container_python36: &container_python36
    docker:
      - image: circleci/python:3.6.2
    working_dir: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  dependencies_key: &dependencies_key
    v1-dependencies-{{ checksum "requirements.txt"}}
  dependencies_backup_key: &dependencies_backup_key
    v1-dependencies

  restore_dependencies: &restore_dependencies
    restore_cache:
      keys:
        - *dependencies_key
        - *dependencies_backup_key


jobs:

  checkout_code_27:
    <<: *container_python27
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  checkout_code:
    <<: *container_python36
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  install_dependencies_27:
    <<: *container_python27
    steps:  
      - *restore_repo
      - *restore_dependencies
      - run: |
            python -m venv ~/venv
            . ~/venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: dependencies_key
          paths:
            - ~/venv

  install_dependencies:
    <<: *container_python36
    steps:  
      - *restore_repo
      - *restore_dependencies
      - run: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pwd
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: dependencies_key
          paths:
            - ~/venv

  test_27:
    <<: *container_python27
    steps:
      - *restore_repo
      - *restore_dependencies
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            nosetests -v --with-coverage --cover-package satsearch

  test:
    <<: *container_python36
    steps:
      - *restore_repo
      - *restore_dependencies
      - run:
          name: Run tests
          command: |
            . ~/venv/bin/activate
            nosetests -v --with-coverage --cover-package satsearch

  deploy:
    <<: *container_python36
    steps:
      - *restore_repo
      - *restore_dependencies
      - run:
          name: Deploy
          command: |
            . ~/venv/bin/activate
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            pip install twine
            python setup.py sdist
            VERSION=`awk -F\' '{print $2,$4}' satsearch/version.py`
            git tag $VERSION
            git push origin $VERSION
            twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - install_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - install_dependencies
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
#  build_test_27:
#    jobs:
#      - checkout_code_27
#      - install_dependencies_27:
#          requires:
#            - checkout_code_27
#      - test_27:
#          requires:
#            - install_dependencies_27

