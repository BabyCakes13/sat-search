# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2


references:

  container_python: &container_python
    docker:
      - image: circleci/python:3.6.2
    working_dir: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

jobs:

  checkout_code:
    <<: *container_python
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  install_and_test:
    <<: *container_python
    steps:  
      - *restore_repo
      - restore_cache:
          keys: 
            - v1-dependencies-{{ checksum "requirements.txt"}}
            - v1-dependencies
      - run: |
            python3 -m venv ~/venv
            . ~/venv/bin/activate
            pwd
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
            pytest --cov satsearch test/
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt"}}
          paths:
            - ~/venv

  deploy:
    <<: *container_python
    steps:
      - *restore_repo
      - restore_cache:
          keys: 
            - v1-dependencies-{{ checksum "requirements.txt"}}
            - v1-dependencies
      - run:
          name: Deploy
          command: |
            . ~/venv/bin/activate
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            pip install twine
            python setup.py sdist
            #VERSION=`awk -F\' '{print $2,$4}' satsearch/version.py`
            #git tag $VERSION
            #git push origin $VERSION
            twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code:
          filters:
            tags:
              only: /.*/
      - install_and_test:
          requires:
            - checkout_code
          filters:
            tags:
              only: /.*/          
      - deploy:
          requires:
            - install_and_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
